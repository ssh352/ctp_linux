// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ctp.proto

#ifndef PROTOBUF_INCLUDED_ctp_2eproto
#define PROTOBUF_INCLUDED_ctp_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_ctp_2eproto 

namespace protobuf_ctp_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_ctp_2eproto
namespace ctp {
class TDF_FUTURE_DATA;
class TDF_FUTURE_DATADefaultTypeInternal;
extern TDF_FUTURE_DATADefaultTypeInternal _TDF_FUTURE_DATA_default_instance_;
}  // namespace ctp
namespace google {
namespace protobuf {
template<> ::ctp::TDF_FUTURE_DATA* Arena::CreateMaybeMessage<::ctp::TDF_FUTURE_DATA>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ctp {

// ===================================================================

class TDF_FUTURE_DATA : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ctp.TDF_FUTURE_DATA) */ {
 public:
  TDF_FUTURE_DATA();
  virtual ~TDF_FUTURE_DATA();

  TDF_FUTURE_DATA(const TDF_FUTURE_DATA& from);

  inline TDF_FUTURE_DATA& operator=(const TDF_FUTURE_DATA& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TDF_FUTURE_DATA(TDF_FUTURE_DATA&& from) noexcept
    : TDF_FUTURE_DATA() {
    *this = ::std::move(from);
  }

  inline TDF_FUTURE_DATA& operator=(TDF_FUTURE_DATA&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TDF_FUTURE_DATA& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TDF_FUTURE_DATA* internal_default_instance() {
    return reinterpret_cast<const TDF_FUTURE_DATA*>(
               &_TDF_FUTURE_DATA_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(TDF_FUTURE_DATA* other);
  friend void swap(TDF_FUTURE_DATA& a, TDF_FUTURE_DATA& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TDF_FUTURE_DATA* New() const final {
    return CreateMaybeMessage<TDF_FUTURE_DATA>(NULL);
  }

  TDF_FUTURE_DATA* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TDF_FUTURE_DATA>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TDF_FUTURE_DATA& from);
  void MergeFrom(const TDF_FUTURE_DATA& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TDF_FUTURE_DATA* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed32 nAskPrice = 23;
  int naskprice_size() const;
  void clear_naskprice();
  static const int kNAskPriceFieldNumber = 23;
  ::google::protobuf::uint32 naskprice(int index) const;
  void set_naskprice(int index, ::google::protobuf::uint32 value);
  void add_naskprice(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      naskprice() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_naskprice();

  // repeated fixed32 nAskVol = 24;
  int naskvol_size() const;
  void clear_naskvol();
  static const int kNAskVolFieldNumber = 24;
  ::google::protobuf::uint32 naskvol(int index) const;
  void set_naskvol(int index, ::google::protobuf::uint32 value);
  void add_naskvol(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      naskvol() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_naskvol();

  // repeated fixed32 nBidPrice = 25;
  int nbidprice_size() const;
  void clear_nbidprice();
  static const int kNBidPriceFieldNumber = 25;
  ::google::protobuf::uint32 nbidprice(int index) const;
  void set_nbidprice(int index, ::google::protobuf::uint32 value);
  void add_nbidprice(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      nbidprice() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_nbidprice();

  // repeated fixed32 nBidVol = 26;
  int nbidvol_size() const;
  void clear_nbidvol();
  static const int kNBidVolFieldNumber = 26;
  ::google::protobuf::uint32 nbidvol(int index) const;
  void set_nbidvol(int index, ::google::protobuf::uint32 value);
  void add_nbidvol(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      nbidvol() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_nbidvol();

  // string szWindCode = 1;
  void clear_szwindcode();
  static const int kSzWindCodeFieldNumber = 1;
  const ::std::string& szwindcode() const;
  void set_szwindcode(const ::std::string& value);
  #if LANG_CXX11
  void set_szwindcode(::std::string&& value);
  #endif
  void set_szwindcode(const char* value);
  void set_szwindcode(const char* value, size_t size);
  ::std::string* mutable_szwindcode();
  ::std::string* release_szwindcode();
  void set_allocated_szwindcode(::std::string* szwindcode);

  // string szCode = 2;
  void clear_szcode();
  static const int kSzCodeFieldNumber = 2;
  const ::std::string& szcode() const;
  void set_szcode(const ::std::string& value);
  #if LANG_CXX11
  void set_szcode(::std::string&& value);
  #endif
  void set_szcode(const char* value);
  void set_szcode(const char* value, size_t size);
  ::std::string* mutable_szcode();
  ::std::string* release_szcode();
  void set_allocated_szcode(::std::string* szcode);

  // int32 nActionDay = 3;
  void clear_nactionday();
  static const int kNActionDayFieldNumber = 3;
  ::google::protobuf::int32 nactionday() const;
  void set_nactionday(::google::protobuf::int32 value);

  // int32 nTradingDay = 4;
  void clear_ntradingday();
  static const int kNTradingDayFieldNumber = 4;
  ::google::protobuf::int32 ntradingday() const;
  void set_ntradingday(::google::protobuf::int32 value);

  // int32 nTime = 5;
  void clear_ntime();
  static const int kNTimeFieldNumber = 5;
  ::google::protobuf::int32 ntime() const;
  void set_ntime(::google::protobuf::int32 value);

  // int32 nStatus = 6;
  void clear_nstatus();
  static const int kNStatusFieldNumber = 6;
  ::google::protobuf::int32 nstatus() const;
  void set_nstatus(::google::protobuf::int32 value);

  // int64 iPreOpenInterest = 7;
  void clear_ipreopeninterest();
  static const int kIPreOpenInterestFieldNumber = 7;
  ::google::protobuf::int64 ipreopeninterest() const;
  void set_ipreopeninterest(::google::protobuf::int64 value);

  // fixed32 nPreClose = 8;
  void clear_npreclose();
  static const int kNPreCloseFieldNumber = 8;
  ::google::protobuf::uint32 npreclose() const;
  void set_npreclose(::google::protobuf::uint32 value);

  // fixed32 nPreSettlePrice = 9;
  void clear_npresettleprice();
  static const int kNPreSettlePriceFieldNumber = 9;
  ::google::protobuf::uint32 npresettleprice() const;
  void set_npresettleprice(::google::protobuf::uint32 value);

  // fixed32 nOpen = 10;
  void clear_nopen();
  static const int kNOpenFieldNumber = 10;
  ::google::protobuf::uint32 nopen() const;
  void set_nopen(::google::protobuf::uint32 value);

  // fixed32 nHigh = 11;
  void clear_nhigh();
  static const int kNHighFieldNumber = 11;
  ::google::protobuf::uint32 nhigh() const;
  void set_nhigh(::google::protobuf::uint32 value);

  // fixed32 nLow = 12;
  void clear_nlow();
  static const int kNLowFieldNumber = 12;
  ::google::protobuf::uint32 nlow() const;
  void set_nlow(::google::protobuf::uint32 value);

  // fixed32 nMatch = 13;
  void clear_nmatch();
  static const int kNMatchFieldNumber = 13;
  ::google::protobuf::uint32 nmatch() const;
  void set_nmatch(::google::protobuf::uint32 value);

  // int64 iVolume = 14;
  void clear_ivolume();
  static const int kIVolumeFieldNumber = 14;
  ::google::protobuf::int64 ivolume() const;
  void set_ivolume(::google::protobuf::int64 value);

  // int64 iTurnover = 15;
  void clear_iturnover();
  static const int kITurnoverFieldNumber = 15;
  ::google::protobuf::int64 iturnover() const;
  void set_iturnover(::google::protobuf::int64 value);

  // int64 iOpenInterest = 16;
  void clear_iopeninterest();
  static const int kIOpenInterestFieldNumber = 16;
  ::google::protobuf::int64 iopeninterest() const;
  void set_iopeninterest(::google::protobuf::int64 value);

  // fixed32 nClose = 17;
  void clear_nclose();
  static const int kNCloseFieldNumber = 17;
  ::google::protobuf::uint32 nclose() const;
  void set_nclose(::google::protobuf::uint32 value);

  // fixed32 nSettlePrice = 18;
  void clear_nsettleprice();
  static const int kNSettlePriceFieldNumber = 18;
  ::google::protobuf::uint32 nsettleprice() const;
  void set_nsettleprice(::google::protobuf::uint32 value);

  // fixed32 nHighLimited = 19;
  void clear_nhighlimited();
  static const int kNHighLimitedFieldNumber = 19;
  ::google::protobuf::uint32 nhighlimited() const;
  void set_nhighlimited(::google::protobuf::uint32 value);

  // fixed32 nLowLimited = 20;
  void clear_nlowlimited();
  static const int kNLowLimitedFieldNumber = 20;
  ::google::protobuf::uint32 nlowlimited() const;
  void set_nlowlimited(::google::protobuf::uint32 value);

  // int32 nPreDelta = 21;
  void clear_npredelta();
  static const int kNPreDeltaFieldNumber = 21;
  ::google::protobuf::int32 npredelta() const;
  void set_npredelta(::google::protobuf::int32 value);

  // int32 nCurrDelta = 22;
  void clear_ncurrdelta();
  static const int kNCurrDeltaFieldNumber = 22;
  ::google::protobuf::int32 ncurrdelta() const;
  void set_ncurrdelta(::google::protobuf::int32 value);

  // int32 nAuctionPrice = 27;
  void clear_nauctionprice();
  static const int kNAuctionPriceFieldNumber = 27;
  ::google::protobuf::int32 nauctionprice() const;
  void set_nauctionprice(::google::protobuf::int32 value);

  // int32 nAuctionQty = 28;
  void clear_nauctionqty();
  static const int kNAuctionQtyFieldNumber = 28;
  ::google::protobuf::int32 nauctionqty() const;
  void set_nauctionqty(::google::protobuf::int32 value);

  // int32 nAvgPrice = 29;
  void clear_navgprice();
  static const int kNAvgPriceFieldNumber = 29;
  ::google::protobuf::int32 navgprice() const;
  void set_navgprice(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ctp.TDF_FUTURE_DATA)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > naskprice_;
  mutable int _naskprice_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > naskvol_;
  mutable int _naskvol_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > nbidprice_;
  mutable int _nbidprice_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > nbidvol_;
  mutable int _nbidvol_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr szwindcode_;
  ::google::protobuf::internal::ArenaStringPtr szcode_;
  ::google::protobuf::int32 nactionday_;
  ::google::protobuf::int32 ntradingday_;
  ::google::protobuf::int32 ntime_;
  ::google::protobuf::int32 nstatus_;
  ::google::protobuf::int64 ipreopeninterest_;
  ::google::protobuf::uint32 npreclose_;
  ::google::protobuf::uint32 npresettleprice_;
  ::google::protobuf::uint32 nopen_;
  ::google::protobuf::uint32 nhigh_;
  ::google::protobuf::uint32 nlow_;
  ::google::protobuf::uint32 nmatch_;
  ::google::protobuf::int64 ivolume_;
  ::google::protobuf::int64 iturnover_;
  ::google::protobuf::int64 iopeninterest_;
  ::google::protobuf::uint32 nclose_;
  ::google::protobuf::uint32 nsettleprice_;
  ::google::protobuf::uint32 nhighlimited_;
  ::google::protobuf::uint32 nlowlimited_;
  ::google::protobuf::int32 npredelta_;
  ::google::protobuf::int32 ncurrdelta_;
  ::google::protobuf::int32 nauctionprice_;
  ::google::protobuf::int32 nauctionqty_;
  ::google::protobuf::int32 navgprice_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_ctp_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TDF_FUTURE_DATA

// string szWindCode = 1;
inline void TDF_FUTURE_DATA::clear_szwindcode() {
  szwindcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TDF_FUTURE_DATA::szwindcode() const {
  // @@protoc_insertion_point(field_get:ctp.TDF_FUTURE_DATA.szWindCode)
  return szwindcode_.GetNoArena();
}
inline void TDF_FUTURE_DATA::set_szwindcode(const ::std::string& value) {
  
  szwindcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ctp.TDF_FUTURE_DATA.szWindCode)
}
#if LANG_CXX11
inline void TDF_FUTURE_DATA::set_szwindcode(::std::string&& value) {
  
  szwindcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ctp.TDF_FUTURE_DATA.szWindCode)
}
#endif
inline void TDF_FUTURE_DATA::set_szwindcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  szwindcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ctp.TDF_FUTURE_DATA.szWindCode)
}
inline void TDF_FUTURE_DATA::set_szwindcode(const char* value, size_t size) {
  
  szwindcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ctp.TDF_FUTURE_DATA.szWindCode)
}
inline ::std::string* TDF_FUTURE_DATA::mutable_szwindcode() {
  
  // @@protoc_insertion_point(field_mutable:ctp.TDF_FUTURE_DATA.szWindCode)
  return szwindcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TDF_FUTURE_DATA::release_szwindcode() {
  // @@protoc_insertion_point(field_release:ctp.TDF_FUTURE_DATA.szWindCode)
  
  return szwindcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TDF_FUTURE_DATA::set_allocated_szwindcode(::std::string* szwindcode) {
  if (szwindcode != NULL) {
    
  } else {
    
  }
  szwindcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szwindcode);
  // @@protoc_insertion_point(field_set_allocated:ctp.TDF_FUTURE_DATA.szWindCode)
}

// string szCode = 2;
inline void TDF_FUTURE_DATA::clear_szcode() {
  szcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TDF_FUTURE_DATA::szcode() const {
  // @@protoc_insertion_point(field_get:ctp.TDF_FUTURE_DATA.szCode)
  return szcode_.GetNoArena();
}
inline void TDF_FUTURE_DATA::set_szcode(const ::std::string& value) {
  
  szcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ctp.TDF_FUTURE_DATA.szCode)
}
#if LANG_CXX11
inline void TDF_FUTURE_DATA::set_szcode(::std::string&& value) {
  
  szcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ctp.TDF_FUTURE_DATA.szCode)
}
#endif
inline void TDF_FUTURE_DATA::set_szcode(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  szcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ctp.TDF_FUTURE_DATA.szCode)
}
inline void TDF_FUTURE_DATA::set_szcode(const char* value, size_t size) {
  
  szcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ctp.TDF_FUTURE_DATA.szCode)
}
inline ::std::string* TDF_FUTURE_DATA::mutable_szcode() {
  
  // @@protoc_insertion_point(field_mutable:ctp.TDF_FUTURE_DATA.szCode)
  return szcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TDF_FUTURE_DATA::release_szcode() {
  // @@protoc_insertion_point(field_release:ctp.TDF_FUTURE_DATA.szCode)
  
  return szcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TDF_FUTURE_DATA::set_allocated_szcode(::std::string* szcode) {
  if (szcode != NULL) {
    
  } else {
    
  }
  szcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szcode);
  // @@protoc_insertion_point(field_set_allocated:ctp.TDF_FUTURE_DATA.szCode)
}

// int32 nActionDay = 3;
inline void TDF_FUTURE_DATA::clear_nactionday() {
  nactionday_ = 0;
}
inline ::google::protobuf::int32 TDF_FUTURE_DATA::nactionday() const {
  // @@protoc_insertion_point(field_get:ctp.TDF_FUTURE_DATA.nActionDay)
  return nactionday_;
}
inline void TDF_FUTURE_DATA::set_nactionday(::google::protobuf::int32 value) {
  
  nactionday_ = value;
  // @@protoc_insertion_point(field_set:ctp.TDF_FUTURE_DATA.nActionDay)
}

// int32 nTradingDay = 4;
inline void TDF_FUTURE_DATA::clear_ntradingday() {
  ntradingday_ = 0;
}
inline ::google::protobuf::int32 TDF_FUTURE_DATA::ntradingday() const {
  // @@protoc_insertion_point(field_get:ctp.TDF_FUTURE_DATA.nTradingDay)
  return ntradingday_;
}
inline void TDF_FUTURE_DATA::set_ntradingday(::google::protobuf::int32 value) {
  
  ntradingday_ = value;
  // @@protoc_insertion_point(field_set:ctp.TDF_FUTURE_DATA.nTradingDay)
}

// int32 nTime = 5;
inline void TDF_FUTURE_DATA::clear_ntime() {
  ntime_ = 0;
}
inline ::google::protobuf::int32 TDF_FUTURE_DATA::ntime() const {
  // @@protoc_insertion_point(field_get:ctp.TDF_FUTURE_DATA.nTime)
  return ntime_;
}
inline void TDF_FUTURE_DATA::set_ntime(::google::protobuf::int32 value) {
  
  ntime_ = value;
  // @@protoc_insertion_point(field_set:ctp.TDF_FUTURE_DATA.nTime)
}

// int32 nStatus = 6;
inline void TDF_FUTURE_DATA::clear_nstatus() {
  nstatus_ = 0;
}
inline ::google::protobuf::int32 TDF_FUTURE_DATA::nstatus() const {
  // @@protoc_insertion_point(field_get:ctp.TDF_FUTURE_DATA.nStatus)
  return nstatus_;
}
inline void TDF_FUTURE_DATA::set_nstatus(::google::protobuf::int32 value) {
  
  nstatus_ = value;
  // @@protoc_insertion_point(field_set:ctp.TDF_FUTURE_DATA.nStatus)
}

// int64 iPreOpenInterest = 7;
inline void TDF_FUTURE_DATA::clear_ipreopeninterest() {
  ipreopeninterest_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TDF_FUTURE_DATA::ipreopeninterest() const {
  // @@protoc_insertion_point(field_get:ctp.TDF_FUTURE_DATA.iPreOpenInterest)
  return ipreopeninterest_;
}
inline void TDF_FUTURE_DATA::set_ipreopeninterest(::google::protobuf::int64 value) {
  
  ipreopeninterest_ = value;
  // @@protoc_insertion_point(field_set:ctp.TDF_FUTURE_DATA.iPreOpenInterest)
}

// fixed32 nPreClose = 8;
inline void TDF_FUTURE_DATA::clear_npreclose() {
  npreclose_ = 0u;
}
inline ::google::protobuf::uint32 TDF_FUTURE_DATA::npreclose() const {
  // @@protoc_insertion_point(field_get:ctp.TDF_FUTURE_DATA.nPreClose)
  return npreclose_;
}
inline void TDF_FUTURE_DATA::set_npreclose(::google::protobuf::uint32 value) {
  
  npreclose_ = value;
  // @@protoc_insertion_point(field_set:ctp.TDF_FUTURE_DATA.nPreClose)
}

// fixed32 nPreSettlePrice = 9;
inline void TDF_FUTURE_DATA::clear_npresettleprice() {
  npresettleprice_ = 0u;
}
inline ::google::protobuf::uint32 TDF_FUTURE_DATA::npresettleprice() const {
  // @@protoc_insertion_point(field_get:ctp.TDF_FUTURE_DATA.nPreSettlePrice)
  return npresettleprice_;
}
inline void TDF_FUTURE_DATA::set_npresettleprice(::google::protobuf::uint32 value) {
  
  npresettleprice_ = value;
  // @@protoc_insertion_point(field_set:ctp.TDF_FUTURE_DATA.nPreSettlePrice)
}

// fixed32 nOpen = 10;
inline void TDF_FUTURE_DATA::clear_nopen() {
  nopen_ = 0u;
}
inline ::google::protobuf::uint32 TDF_FUTURE_DATA::nopen() const {
  // @@protoc_insertion_point(field_get:ctp.TDF_FUTURE_DATA.nOpen)
  return nopen_;
}
inline void TDF_FUTURE_DATA::set_nopen(::google::protobuf::uint32 value) {
  
  nopen_ = value;
  // @@protoc_insertion_point(field_set:ctp.TDF_FUTURE_DATA.nOpen)
}

// fixed32 nHigh = 11;
inline void TDF_FUTURE_DATA::clear_nhigh() {
  nhigh_ = 0u;
}
inline ::google::protobuf::uint32 TDF_FUTURE_DATA::nhigh() const {
  // @@protoc_insertion_point(field_get:ctp.TDF_FUTURE_DATA.nHigh)
  return nhigh_;
}
inline void TDF_FUTURE_DATA::set_nhigh(::google::protobuf::uint32 value) {
  
  nhigh_ = value;
  // @@protoc_insertion_point(field_set:ctp.TDF_FUTURE_DATA.nHigh)
}

// fixed32 nLow = 12;
inline void TDF_FUTURE_DATA::clear_nlow() {
  nlow_ = 0u;
}
inline ::google::protobuf::uint32 TDF_FUTURE_DATA::nlow() const {
  // @@protoc_insertion_point(field_get:ctp.TDF_FUTURE_DATA.nLow)
  return nlow_;
}
inline void TDF_FUTURE_DATA::set_nlow(::google::protobuf::uint32 value) {
  
  nlow_ = value;
  // @@protoc_insertion_point(field_set:ctp.TDF_FUTURE_DATA.nLow)
}

// fixed32 nMatch = 13;
inline void TDF_FUTURE_DATA::clear_nmatch() {
  nmatch_ = 0u;
}
inline ::google::protobuf::uint32 TDF_FUTURE_DATA::nmatch() const {
  // @@protoc_insertion_point(field_get:ctp.TDF_FUTURE_DATA.nMatch)
  return nmatch_;
}
inline void TDF_FUTURE_DATA::set_nmatch(::google::protobuf::uint32 value) {
  
  nmatch_ = value;
  // @@protoc_insertion_point(field_set:ctp.TDF_FUTURE_DATA.nMatch)
}

// int64 iVolume = 14;
inline void TDF_FUTURE_DATA::clear_ivolume() {
  ivolume_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TDF_FUTURE_DATA::ivolume() const {
  // @@protoc_insertion_point(field_get:ctp.TDF_FUTURE_DATA.iVolume)
  return ivolume_;
}
inline void TDF_FUTURE_DATA::set_ivolume(::google::protobuf::int64 value) {
  
  ivolume_ = value;
  // @@protoc_insertion_point(field_set:ctp.TDF_FUTURE_DATA.iVolume)
}

// int64 iTurnover = 15;
inline void TDF_FUTURE_DATA::clear_iturnover() {
  iturnover_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TDF_FUTURE_DATA::iturnover() const {
  // @@protoc_insertion_point(field_get:ctp.TDF_FUTURE_DATA.iTurnover)
  return iturnover_;
}
inline void TDF_FUTURE_DATA::set_iturnover(::google::protobuf::int64 value) {
  
  iturnover_ = value;
  // @@protoc_insertion_point(field_set:ctp.TDF_FUTURE_DATA.iTurnover)
}

// int64 iOpenInterest = 16;
inline void TDF_FUTURE_DATA::clear_iopeninterest() {
  iopeninterest_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 TDF_FUTURE_DATA::iopeninterest() const {
  // @@protoc_insertion_point(field_get:ctp.TDF_FUTURE_DATA.iOpenInterest)
  return iopeninterest_;
}
inline void TDF_FUTURE_DATA::set_iopeninterest(::google::protobuf::int64 value) {
  
  iopeninterest_ = value;
  // @@protoc_insertion_point(field_set:ctp.TDF_FUTURE_DATA.iOpenInterest)
}

// fixed32 nClose = 17;
inline void TDF_FUTURE_DATA::clear_nclose() {
  nclose_ = 0u;
}
inline ::google::protobuf::uint32 TDF_FUTURE_DATA::nclose() const {
  // @@protoc_insertion_point(field_get:ctp.TDF_FUTURE_DATA.nClose)
  return nclose_;
}
inline void TDF_FUTURE_DATA::set_nclose(::google::protobuf::uint32 value) {
  
  nclose_ = value;
  // @@protoc_insertion_point(field_set:ctp.TDF_FUTURE_DATA.nClose)
}

// fixed32 nSettlePrice = 18;
inline void TDF_FUTURE_DATA::clear_nsettleprice() {
  nsettleprice_ = 0u;
}
inline ::google::protobuf::uint32 TDF_FUTURE_DATA::nsettleprice() const {
  // @@protoc_insertion_point(field_get:ctp.TDF_FUTURE_DATA.nSettlePrice)
  return nsettleprice_;
}
inline void TDF_FUTURE_DATA::set_nsettleprice(::google::protobuf::uint32 value) {
  
  nsettleprice_ = value;
  // @@protoc_insertion_point(field_set:ctp.TDF_FUTURE_DATA.nSettlePrice)
}

// fixed32 nHighLimited = 19;
inline void TDF_FUTURE_DATA::clear_nhighlimited() {
  nhighlimited_ = 0u;
}
inline ::google::protobuf::uint32 TDF_FUTURE_DATA::nhighlimited() const {
  // @@protoc_insertion_point(field_get:ctp.TDF_FUTURE_DATA.nHighLimited)
  return nhighlimited_;
}
inline void TDF_FUTURE_DATA::set_nhighlimited(::google::protobuf::uint32 value) {
  
  nhighlimited_ = value;
  // @@protoc_insertion_point(field_set:ctp.TDF_FUTURE_DATA.nHighLimited)
}

// fixed32 nLowLimited = 20;
inline void TDF_FUTURE_DATA::clear_nlowlimited() {
  nlowlimited_ = 0u;
}
inline ::google::protobuf::uint32 TDF_FUTURE_DATA::nlowlimited() const {
  // @@protoc_insertion_point(field_get:ctp.TDF_FUTURE_DATA.nLowLimited)
  return nlowlimited_;
}
inline void TDF_FUTURE_DATA::set_nlowlimited(::google::protobuf::uint32 value) {
  
  nlowlimited_ = value;
  // @@protoc_insertion_point(field_set:ctp.TDF_FUTURE_DATA.nLowLimited)
}

// int32 nPreDelta = 21;
inline void TDF_FUTURE_DATA::clear_npredelta() {
  npredelta_ = 0;
}
inline ::google::protobuf::int32 TDF_FUTURE_DATA::npredelta() const {
  // @@protoc_insertion_point(field_get:ctp.TDF_FUTURE_DATA.nPreDelta)
  return npredelta_;
}
inline void TDF_FUTURE_DATA::set_npredelta(::google::protobuf::int32 value) {
  
  npredelta_ = value;
  // @@protoc_insertion_point(field_set:ctp.TDF_FUTURE_DATA.nPreDelta)
}

// int32 nCurrDelta = 22;
inline void TDF_FUTURE_DATA::clear_ncurrdelta() {
  ncurrdelta_ = 0;
}
inline ::google::protobuf::int32 TDF_FUTURE_DATA::ncurrdelta() const {
  // @@protoc_insertion_point(field_get:ctp.TDF_FUTURE_DATA.nCurrDelta)
  return ncurrdelta_;
}
inline void TDF_FUTURE_DATA::set_ncurrdelta(::google::protobuf::int32 value) {
  
  ncurrdelta_ = value;
  // @@protoc_insertion_point(field_set:ctp.TDF_FUTURE_DATA.nCurrDelta)
}

// repeated fixed32 nAskPrice = 23;
inline int TDF_FUTURE_DATA::naskprice_size() const {
  return naskprice_.size();
}
inline void TDF_FUTURE_DATA::clear_naskprice() {
  naskprice_.Clear();
}
inline ::google::protobuf::uint32 TDF_FUTURE_DATA::naskprice(int index) const {
  // @@protoc_insertion_point(field_get:ctp.TDF_FUTURE_DATA.nAskPrice)
  return naskprice_.Get(index);
}
inline void TDF_FUTURE_DATA::set_naskprice(int index, ::google::protobuf::uint32 value) {
  naskprice_.Set(index, value);
  // @@protoc_insertion_point(field_set:ctp.TDF_FUTURE_DATA.nAskPrice)
}
inline void TDF_FUTURE_DATA::add_naskprice(::google::protobuf::uint32 value) {
  naskprice_.Add(value);
  // @@protoc_insertion_point(field_add:ctp.TDF_FUTURE_DATA.nAskPrice)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TDF_FUTURE_DATA::naskprice() const {
  // @@protoc_insertion_point(field_list:ctp.TDF_FUTURE_DATA.nAskPrice)
  return naskprice_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TDF_FUTURE_DATA::mutable_naskprice() {
  // @@protoc_insertion_point(field_mutable_list:ctp.TDF_FUTURE_DATA.nAskPrice)
  return &naskprice_;
}

// repeated fixed32 nAskVol = 24;
inline int TDF_FUTURE_DATA::naskvol_size() const {
  return naskvol_.size();
}
inline void TDF_FUTURE_DATA::clear_naskvol() {
  naskvol_.Clear();
}
inline ::google::protobuf::uint32 TDF_FUTURE_DATA::naskvol(int index) const {
  // @@protoc_insertion_point(field_get:ctp.TDF_FUTURE_DATA.nAskVol)
  return naskvol_.Get(index);
}
inline void TDF_FUTURE_DATA::set_naskvol(int index, ::google::protobuf::uint32 value) {
  naskvol_.Set(index, value);
  // @@protoc_insertion_point(field_set:ctp.TDF_FUTURE_DATA.nAskVol)
}
inline void TDF_FUTURE_DATA::add_naskvol(::google::protobuf::uint32 value) {
  naskvol_.Add(value);
  // @@protoc_insertion_point(field_add:ctp.TDF_FUTURE_DATA.nAskVol)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TDF_FUTURE_DATA::naskvol() const {
  // @@protoc_insertion_point(field_list:ctp.TDF_FUTURE_DATA.nAskVol)
  return naskvol_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TDF_FUTURE_DATA::mutable_naskvol() {
  // @@protoc_insertion_point(field_mutable_list:ctp.TDF_FUTURE_DATA.nAskVol)
  return &naskvol_;
}

// repeated fixed32 nBidPrice = 25;
inline int TDF_FUTURE_DATA::nbidprice_size() const {
  return nbidprice_.size();
}
inline void TDF_FUTURE_DATA::clear_nbidprice() {
  nbidprice_.Clear();
}
inline ::google::protobuf::uint32 TDF_FUTURE_DATA::nbidprice(int index) const {
  // @@protoc_insertion_point(field_get:ctp.TDF_FUTURE_DATA.nBidPrice)
  return nbidprice_.Get(index);
}
inline void TDF_FUTURE_DATA::set_nbidprice(int index, ::google::protobuf::uint32 value) {
  nbidprice_.Set(index, value);
  // @@protoc_insertion_point(field_set:ctp.TDF_FUTURE_DATA.nBidPrice)
}
inline void TDF_FUTURE_DATA::add_nbidprice(::google::protobuf::uint32 value) {
  nbidprice_.Add(value);
  // @@protoc_insertion_point(field_add:ctp.TDF_FUTURE_DATA.nBidPrice)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TDF_FUTURE_DATA::nbidprice() const {
  // @@protoc_insertion_point(field_list:ctp.TDF_FUTURE_DATA.nBidPrice)
  return nbidprice_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TDF_FUTURE_DATA::mutable_nbidprice() {
  // @@protoc_insertion_point(field_mutable_list:ctp.TDF_FUTURE_DATA.nBidPrice)
  return &nbidprice_;
}

// repeated fixed32 nBidVol = 26;
inline int TDF_FUTURE_DATA::nbidvol_size() const {
  return nbidvol_.size();
}
inline void TDF_FUTURE_DATA::clear_nbidvol() {
  nbidvol_.Clear();
}
inline ::google::protobuf::uint32 TDF_FUTURE_DATA::nbidvol(int index) const {
  // @@protoc_insertion_point(field_get:ctp.TDF_FUTURE_DATA.nBidVol)
  return nbidvol_.Get(index);
}
inline void TDF_FUTURE_DATA::set_nbidvol(int index, ::google::protobuf::uint32 value) {
  nbidvol_.Set(index, value);
  // @@protoc_insertion_point(field_set:ctp.TDF_FUTURE_DATA.nBidVol)
}
inline void TDF_FUTURE_DATA::add_nbidvol(::google::protobuf::uint32 value) {
  nbidvol_.Add(value);
  // @@protoc_insertion_point(field_add:ctp.TDF_FUTURE_DATA.nBidVol)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TDF_FUTURE_DATA::nbidvol() const {
  // @@protoc_insertion_point(field_list:ctp.TDF_FUTURE_DATA.nBidVol)
  return nbidvol_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TDF_FUTURE_DATA::mutable_nbidvol() {
  // @@protoc_insertion_point(field_mutable_list:ctp.TDF_FUTURE_DATA.nBidVol)
  return &nbidvol_;
}

// int32 nAuctionPrice = 27;
inline void TDF_FUTURE_DATA::clear_nauctionprice() {
  nauctionprice_ = 0;
}
inline ::google::protobuf::int32 TDF_FUTURE_DATA::nauctionprice() const {
  // @@protoc_insertion_point(field_get:ctp.TDF_FUTURE_DATA.nAuctionPrice)
  return nauctionprice_;
}
inline void TDF_FUTURE_DATA::set_nauctionprice(::google::protobuf::int32 value) {
  
  nauctionprice_ = value;
  // @@protoc_insertion_point(field_set:ctp.TDF_FUTURE_DATA.nAuctionPrice)
}

// int32 nAuctionQty = 28;
inline void TDF_FUTURE_DATA::clear_nauctionqty() {
  nauctionqty_ = 0;
}
inline ::google::protobuf::int32 TDF_FUTURE_DATA::nauctionqty() const {
  // @@protoc_insertion_point(field_get:ctp.TDF_FUTURE_DATA.nAuctionQty)
  return nauctionqty_;
}
inline void TDF_FUTURE_DATA::set_nauctionqty(::google::protobuf::int32 value) {
  
  nauctionqty_ = value;
  // @@protoc_insertion_point(field_set:ctp.TDF_FUTURE_DATA.nAuctionQty)
}

// int32 nAvgPrice = 29;
inline void TDF_FUTURE_DATA::clear_navgprice() {
  navgprice_ = 0;
}
inline ::google::protobuf::int32 TDF_FUTURE_DATA::navgprice() const {
  // @@protoc_insertion_point(field_get:ctp.TDF_FUTURE_DATA.nAvgPrice)
  return navgprice_;
}
inline void TDF_FUTURE_DATA::set_navgprice(::google::protobuf::int32 value) {
  
  navgprice_ = value;
  // @@protoc_insertion_point(field_set:ctp.TDF_FUTURE_DATA.nAvgPrice)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace ctp

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_ctp_2eproto
